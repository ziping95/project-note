(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{209:function(e,s,v){"use strict";v.r(s);var a=v(0),l=Object(a.a)({},(function(){var e=this,s=e.$createElement,v=e._self._c||s;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h1",{attrs:{id:"服务器安装"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#服务器安装"}},[e._v("#")]),e._v(" 服务器安装")]),e._v(" "),v("h2",{attrs:{id:"一、修改为阿里yum源"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#一、修改为阿里yum源"}},[e._v("#")]),e._v(" 一、修改为阿里yum源")]),e._v(" "),v("ol",[v("li",[e._v("首先备份系统自带yum源配置文件/etc/yum.repos.d/CentOS-Base.repo\n"),v("ul",[v("li",[v("code",[e._v("mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup")])])])]),e._v(" "),v("li",[e._v("查看CentOS系统版本\n"),v("ul",[v("li",[v("code",[e._v("lsb_release -a")])])])]),e._v(" "),v("li",[e._v("下载ailiyun的yum源配置文件到/etc/yum.repos.d/\n"),v("ul",[v("li",[v("code",[e._v("wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo")])])])]),e._v(" "),v("li",[e._v("运行yum makecache生成缓存\n"),v("ul",[v("li",[v("code",[e._v("yum makecache")])])])]),e._v(" "),v("li",[e._v("这时候再更新系统就会看到以下mirrors.aliyun.com信息\n"),v("ul",[v("li",[v("code",[e._v("yum -y updat")]),e._v(" 等待完成")])])])]),e._v(" "),v("h2",{attrs:{id:"二、安装mysql"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#二、安装mysql"}},[e._v("#")]),e._v(" 二、安装MySQL")]),e._v(" "),v("ol",[v("li",[e._v("将"),v("code",[e._v("mysql57-community-release-el7-10.noarch.rpm")]),e._v("文件放到任意文件夹")]),e._v(" "),v("li",[e._v("执行"),v("code",[e._v("yum -y install mysql57-community-release-el7-10.noarch.rpm")])]),e._v(" "),v("li",[e._v("执行"),v("code",[e._v("yum -y install mysql-community-server")]),e._v(" 等到开始下载文件时候终止掉")]),e._v(" "),v("li",[e._v("进入"),v("code",[e._v("/var/cache/yum/x86_64/7/mysql57-community/packages/")]),e._v("下删除全部东西\n"),v("ul",[v("li",[v("code",[e._v("cd /var/cache/yum/x86_64/7/mysql57-community/packages/")])]),e._v(" "),v("li",[v("code",[e._v("rm -rf ./*")])])])]),e._v(" "),v("li",[e._v("将文件传到刚才的文件夹")]),e._v(" "),v("li",[e._v("执行"),v("code",[e._v("yum -y install mysql-community-server")])]),e._v(" "),v("li",[e._v("启动MySQL服务,继续在命令行输入"),v("code",[e._v("systemctl start mysqld")])]),e._v(" "),v("li",[e._v("检查mysql的启动状态"),v("code",[e._v("systemctl status mysqld")])]),e._v(" "),v("li",[e._v("设置开机启动\n"),v("ul",[v("li",[v("code",[e._v("systemctl enable mysqld")])]),e._v(" "),v("li",[v("code",[e._v("systemctl daemon-reload")])])])]),e._v(" "),v("li",[e._v("获取临时密码"),v("code",[e._v("grep 'temporary password' /var/log/mysqld.log")])]),e._v(" "),v("li",[e._v("登录数据库并修改密码\n"),v("ul",[v("li",[v("code",[e._v("mysql -uroot -p")])]),e._v(" "),v("li",[v("code",[e._v("set password for 'root'@'localhost'=password('whaty!@#123');")])])])]),e._v(" "),v("li",[e._v("如果提示密码不符合当前策略，解决办法\n"),v("ul",[v("li",[e._v("输入"),v("code",[e._v("set global validate_password_policy=0;")])])])]),e._v(" "),v("li",[e._v("允许远程连接MySQL\n"),v("ul",[v("li",[e._v("进入数据库"),v("code",[e._v("use mysql")])]),e._v(" "),v("li",[e._v("查看用户"),v("code",[e._v("select user,host from user;")])]),e._v(" "),v("li",[e._v("更改root用户"),v("code",[e._v("update user set host = '%' where user = 'root';")])]),e._v(" "),v("li",[e._v("刷新权限"),v("code",[e._v("flush privileges;")])])])])]),e._v(" "),v("h2",{attrs:{id:"三、安装jdk"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#三、安装jdk"}},[e._v("#")]),e._v(" 三、安装jdk")]),e._v(" "),v("ol",[v("li",[v("p",[e._v("查看服务器有无自带jdk "),v("code",[e._v("rpm -qa | grep java")])])]),e._v(" "),v("li",[v("p",[e._v("然后通过"),v("code",[e._v("rpm -e --nodeps")]),e._v("后面跟系统自带的jdk名，这个命令来删除系统自带的jdk")])]),e._v(" "),v("li",[v("p",[e._v("解压压缩包"),v("code",[e._v("tar -zxvf jdk-8u201-linux-x64.tar.gz")])])]),e._v(" "),v("li",[v("p",[e._v("配置环境"),v("code",[e._v("vim /etc/profile")]),e._v("在最后添加，注意改home路径")]),e._v(" "),v("div",{staticClass:"language-shell extra-class"},[v("pre",{pre:!0,attrs:{class:"language-shell"}},[v("code",[v("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("export")]),e._v(" "),v("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("JAVA_HOME")]),v("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/usr/local/software/jdk1.8.0_201\n"),v("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("export")]),e._v(" "),v("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("CLASSPATH")]),v("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(".:"),v("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$JAVA_HOME")]),e._v("/jre/lib/rt.jar:"),v("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$JAVA_HOME")]),e._v("/lib/dt.jar:"),v("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$JAVA_HOME")]),e._v("/lib/tools.jar\n"),v("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("export")]),e._v(" "),v("span",{pre:!0,attrs:{class:"token assign-left variable"}},[v("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("PATH")])]),v("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),v("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("$PATH")]),v("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v(":")]),v("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$JAVA_HOME")]),e._v("/bin\n")])])])]),e._v(" "),v("li",[v("p",[e._v("刷新配置"),v("code",[e._v(". /etc/profile")]),e._v("  点和/之间有个空格，然后"),v("code",[e._v("java -version")]),e._v("查看")])])]),e._v(" "),v("h2",{attrs:{id:"四、安装redis"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#四、安装redis"}},[e._v("#")]),e._v(" 四、安装Redis")]),e._v(" "),v("ol",[v("li",[v("p",[e._v("由于redis是c语言编写，所以安装gcc")]),e._v(" "),v("ul",[v("li",[e._v("先安装gcc"),v("code",[e._v("yum install gcc gcc-c++ autoconf automake")])]),e._v(" "),v("li",[e._v("再安装make编译工具 "),v("code",[e._v("yum -y install gcc automake autoconf libtool make")])])])]),e._v(" "),v("li",[v("p",[e._v("解压"),v("code",[e._v("tar -zxvf redis-5.0.3.tar.gz")])])]),e._v(" "),v("li",[v("p",[e._v("进入redis目录"),v("code",[e._v("cd redis-5.0.3")])])]),e._v(" "),v("li",[v("p",[e._v("编译"),v("code",[e._v("make")])])]),e._v(" "),v("li",[v("p",[e._v("安装"),v("code",[e._v("make PREFIX=/usr/local/redis install")])])]),e._v(" "),v("li",[v("p",[e._v("拷贝redis.conf到安装目录"),v("code",[e._v("cp redis.conf /usr/local/redis")])])]),e._v(" "),v("li",[v("p",[e._v("进入"),v("code",[e._v("cd /usr/local/redis")]),e._v("目录")])]),e._v(" "),v("li",[v("p",[e._v("修改"),v("code",[e._v("redis.conf")]),e._v("文件")]),e._v(" "),v("ul",[v("li",[e._v("后台启动，"),v("code",[e._v("daemonize yes")])]),e._v(" "),v("li",[e._v("绑定端口，port 6379 默认是6379 需要安全组开放端口")]),e._v(" "),v("li",[e._v("将protected-mode模式修改为no 允许远程访问")]),e._v(" "),v("li",[e._v("绑定IP，bind 0.0.0.0")]),e._v(" "),v("li",[e._v("指定持久化方式，appendonly yes")]),e._v(" "),v("li",[e._v("指定数据存放路径，dir /usr/local/redis/log rdb存放的路径")]),e._v(" "),v("li",[e._v("requirepass whaty!@#123 设置密码")])])]),e._v(" "),v("li",[v("p",[e._v("启动redis"),v("code",[e._v("./bin/redis-server ./redis.conf")])])]),e._v(" "),v("li",[v("p",[e._v("查看是否启动成功："),v("code",[e._v("ps aux | grep redis")])])]),e._v(" "),v("li",[v("p",[e._v("进入客户端"),v("code",[e._v("./bin/redis-cli --raw")]),e._v(" 处理中文乱码问题")])])]),e._v(" "),v("h2",{attrs:{id:"五、安装nginx"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#五、安装nginx"}},[e._v("#")]),e._v(" 五、安装nginx")]),e._v(" "),v("ol",[v("li",[e._v("一键安装所有依赖"),v("code",[e._v("yum -y install gcc zlib zlib-devel pcre-devel openssl openssl-devel")])]),e._v(" "),v("li",[e._v("解压")]),e._v(" "),v("li",[e._v("进入文件夹"),v("code",[e._v("cd /usr/local/nginx")])]),e._v(" "),v("li",[e._v("执行命令"),v("code",[e._v("./configure")])]),e._v(" "),v("li",[e._v("执行make命令"),v("code",[e._v("make")])]),e._v(" "),v("li",[e._v("执行"),v("code",[e._v("make install")]),e._v("命令")]),e._v(" "),v("li",[e._v("配置"),v("code",[e._v("nginx.conf")])]),e._v(" "),v("li",[e._v("启动nginx "),v("code",[e._v("/usr/local/nginx/sbin/nginx -s reload")])])]),e._v(" "),v("h2",{attrs:{id:"六、安装tomcat"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#六、安装tomcat"}},[e._v("#")]),e._v(" 六、安装Tomcat")]),e._v(" "),v("ol",[v("li",[e._v("解压"),v("code",[e._v("tar -zxvf apache-tomcat-9.0.14.tar.gz")])]),e._v(" "),v("li",[e._v("进入tomcat下的bin目录后,启动tomcat"),v("code",[e._v("./catalina.sh start")])])]),e._v(" "),v("h2",{attrs:{id:"七、安装docker"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#七、安装docker"}},[e._v("#")]),e._v(" 七、安装Docker")]),e._v(" "),v("ol",[v("li",[v("p",[e._v("安装依赖包")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("sudo yum install -y yum-utils device-mapper-persistent-data lvm2")])])])]),e._v(" "),v("li",[v("p",[e._v("设置阿里云镜像")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("sudo yum-config-manager --add-repo https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo")])])])]),e._v(" "),v("li",[v("p",[e._v("安装Docker-CE")]),e._v(" "),v("ul",[v("li",[e._v("重建 Yum 缓存"),v("code",[e._v("yum clean all")]),e._v(" "),v("code",[e._v("yum makecache")])]),e._v(" "),v("li",[e._v("安装 Docker-CE ，请执行一下命令进行安装 "),v("code",[e._v("sudo yum install docker-ce")])])])]),e._v(" "),v("li",[v("p",[e._v("启动Docker-CE")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("sudo systemctl enable docker")])]),e._v(" "),v("li",[v("code",[e._v("sudo systemctl start docker")])])])]),e._v(" "),v("li",[v("p",[v("em",[v("strong",[e._v("[可选]")])]),e._v(" 为Docker 建立用户组")]),e._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),v("p",[e._v("docker 命令与 Docker 引擎通讯之间通过 UnixSocket ，但是能够有权限访问 UnixSocket 的用户只有 root 和 docker 用户组的用户才能够进行访问，所以我们需要建立一个 docker 用户组，并且将需要访问 docker 的用户添加到这一个用户组当中来。")])]),e._v(" "),v("ol",[v("li",[e._v("建立 Docker 用户组"),v("code",[e._v("sudo groupadd docker")])]),e._v(" "),v("li",[e._v("添加当前用户到docker组"),v("code",[e._v("sudo usermod -aG docker $USER")])])])]),e._v(" "),v("li",[v("p",[e._v("镜像加速配置")]),e._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),v("p",[e._v("这里使用的是 "),v("a",{attrs:{href:"https://cr.console.aliyun.com/#/accelerator",target:"_blank",rel:"noopener noreferrer"}},[e._v("阿里云提供的镜像加速"),v("OutboundLink")],1),e._v(" ，登录并且设置密码之后在左侧的 "),v("strong",[e._v("Docker Hub 镜像站点")]),e._v(" 可以找到专属加速器地址，复制下来。然后在/etc/docker目录下创建daemon.json文件")])]),e._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[e._v('sudo mkdir -p /etc/docker\nsudo tee /etc/docker/daemon.json <<-\'EOF\'\n{\n  "registry-mirrors": ["https://sr6fslfm.mirror.aliyuncs.com"]\n}\nEOF\n')])])]),v("ul",[v("li",[e._v("之后重新加载配置，并且重启 Docker 服务"),v("code",[e._v("systemctl daemon-reload")]),e._v(" "),v("code",[e._v("systemctl restart docker")])])])]),e._v(" "),v("li",[v("p",[e._v("配置 Docker 容器与镜像")]),e._v(" "),v("ul",[v("li",[e._v("拉取"),v("code",[e._v("docker pull centos:7.6.1810")])]),e._v(" "),v("li",[e._v("下载完后查看是否成功"),v("code",[e._v("docker images")])]),e._v(" "),v("li",[e._v("启动镜像"),v("code",[e._v("docker run -d -i -t -p 80:80 --name web_config centos:7.6.1810 /bin/bash")])])])]),e._v(" "),v("li",[v("p",[e._v("备注：")]),e._v(" "),v("ul",[v("li",[e._v("为了使容器支持systemctl命令需要在启动容器时候加上"),v("code",[e._v('--privileged -e "container=docker"')]),e._v(" 并且最后面的命令改为"),v("code",[e._v("/usr/sbin/init")])])])])]),e._v(" "),v("h2",{attrs:{id:"八、安装vim"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#八、安装vim"}},[e._v("#")]),e._v(" 八、安装VIM")]),e._v(" "),v("ol",[v("li",[v("p",[e._v("检查是否已经存在vim包")]),e._v(" "),v("ul",[v("li",[v("p",[v("code",[e._v("rpm -qa|grep vim")]),e._v(" 如果已安装则显示")]),e._v(" "),v("blockquote",[v("div",{staticClass:"language-shell extra-class"},[v("pre",{pre:!0,attrs:{class:"language-shell"}},[v("code",[e._v("vim-minimal-7.4.629-6.el7.x86_64\nvim-filesystem-7.4.629-6.el7.x86_64\nvim-enhanced-7.4.629-6.el7.x86_64\nvim-common-7.4.629-6.el7.x86_64\nvim-X11-7.4.629-6.el7.x86_64\n")])])])])])])]),e._v(" "),v("li",[v("p",[e._v("安装")]),e._v(" "),v("ul",[v("li",[e._v("如果缺少了其中某个，比如说： vim-enhanced这个包少了，则执行："),v("code",[e._v("yum -y install vim-enhanced")])]),e._v(" "),v("li",[e._v("如果上面三个包一个都没有显示，则直接输入命令："),v("code",[e._v("yum -y install vim*")])])])]),e._v(" "),v("li",[v("p",[e._v("备注：")]),e._v(" "),v("ul",[v("li",[v("p",[e._v("支持中文修改文件 "),v("code",[e._v("vim /etc/vimrc")]),e._v(" 在文件后添加如下配置")]),e._v(" "),v("blockquote",[v("div",{staticClass:"language-shell extra-class"},[v("pre",{pre:!0,attrs:{class:"language-shell"}},[v("code",[v("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("set")]),e._v(" "),v("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("fileencodings")]),v("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("utf-8,ucs-bom,gb18030,gbk,gb2312,cp936\n"),v("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("set")]),e._v(" "),v("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("termencoding")]),v("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("utf-8\n"),v("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("set")]),e._v(" "),v("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("encoding")]),v("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("utf-8\n")])])])])])])])])])}),[],!1,null,null,null);s.default=l.exports}}]);